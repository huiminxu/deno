name: ci

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.kind }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      matrix:
        os: [ubuntu-16.04]
        kind: ['size']
    steps:
      - name: Configure git
        run: git config --global core.symlinks true

      - name: Clone repository
        uses: actions/checkout@v1
        with:
          fetch-depth: 1
          submodules: true

      - name: Install rust
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: "1.40.0"

      - name: Install python
        uses: actions/setup-python@v1
        with:
          python-version: "2.7.16"
          architecture: x64

      - name: Environment (common)
        run: |
          echo ::set-env name=GH_ACTIONS::1
          echo ::set-env name=RUSTC_WRAPPER::sccache
          echo ::set-env name=DENO_BUILD_MODE::release
          echo ::set-env name=RUST_BACKTRACE::full

      - name: Environment (linux)
        if: startsWith(matrix.os, 'ubuntu')
        # In order to test the installer scripts in std we need a deno
        # executable in the path. See
        # https://github.com/denoland/deno/blob/27cd2c97f18c0392bc04c66b786717b2bc677315/std/installer/mod.ts#L185-L193
        # TODO(ry) This path modification should rather be done in "cargo test".
        run: |
          echo ::add-path::`pwd`/third_party/prebuilt/linux64
          echo ::add-path::`pwd`/target/release

      - name: Log versions
        run: |
          node -v
          python --version
          rustc --version
          cargo --version

      - name: Start sccache
        env:
          AWS_ACCESS_KEY_ID: AKIAIVRN52PLDBP55LBQ
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SCCACHE_BUCKET: deno-sccache
          SCCACHE_IDLE_TIMEOUT: 0
        run: sccache --start-server

      - name: Build
        run: cargo build --release -vv

      - name: Size
        run: ls -lh target/release

      - name: Stop sccache
        run: sccache --stop-server
